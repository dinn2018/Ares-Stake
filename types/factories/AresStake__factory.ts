/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AresStake, AresStakeInterface } from "../AresStake";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockDays",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_apy",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_apy",
        type: "uint256",
      },
    ],
    name: "UpdateAPY",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "apy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "destructRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLockDays",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockDays",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IReward",
        name: "_reward",
        type: "address",
      },
    ],
    name: "setRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_apy",
        type: "uint256",
      },
    ],
    name: "updateAPY",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e42380380610e428339818101604052606081101561003357600080fd5b5080516020820151604090920151909190600061004e6100ca565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506201518092909202600255600155600380546001600160a01b0319166001600160a01b039092169190911790556100ce565b3390565b610d65806100dd6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063d2cbf7ad11610066578063d2cbf7ad14610219578063e9fad8ee14610221578063f2fde38b14610229578063fae728cd1461024f57610100565b80638da5cb5b146101aa578063a694fc3a146101ce578063c5de669e146101eb578063c885bc581461021157610100565b806370a08231116100d357806370a082311461014e578063715018a61461017457806378238c371461017c5780637bb79266146101a257610100565b806318160ddd146101055780632e1a7d4d1461011f5780633bcfc4b81461013e5780636e6ff8a914610146575b600080fd5b61010d61026c565b60408051918252519081900360200190f35b61013c6004803603602081101561013557600080fd5b5035610272565b005b61010d6104c1565b61010d6104c7565b61010d6004803603602081101561016457600080fd5b50356001600160a01b03166104cd565b61013c6104e8565b61013c6004803603602081101561019257600080fd5b50356001600160a01b0316610594565b61010d610618565b6101b261061e565b604080516001600160a01b039092168252519081900360200190f35b61013c600480360360208110156101e457600080fd5b503561062d565b61013c6004803603602081101561020157600080fd5b50356001600160a01b0316610828565b61013c610909565b61010d6109bb565b61013c6109c1565b61013c6004803603602081101561023f57600080fd5b50356001600160a01b0316610a27565b61013c6004803603602081101561026557600080fd5b5035610b29565b60055490565b6004546001600160a01b03166102bd576040805162461bcd60e51b815260206004820152601d6024820152600080516020610cf0833981519152604482015290519081900360640190fd5b60008111610306576040805162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015290519081900360640190fd5b6002543360009081526006602052604090206001015461032591610c07565b4211610367576040805162461bcd60e51b815260206004820152600c60248201526b1d1a5b59481b9bdd08195b9960a21b604482015290519081900360640190fd5b6004805460408051630e0dc3b960e11b81523393810193909352516001600160a01b0390911691631c1b877291602480830192600092919082900301818387803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b50506005546103da9250905082610c68565b600555336000908152600660205260409020546103f79082610c68565b33600081815260066020908152604080832094909455600354845163a9059cbb60e01b815260048101949094526024840186905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b15801561045c57600080fd5b505af1158015610470573d6000803e3d6000fd5b505050506040513d602081101561048657600080fd5b505060408051828152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a250565b60015481565b60025481565b6001600160a01b031660009081526006602052604090205490565b6104f0610cc5565b6001600160a01b031661050161061e565b6001600160a01b03161461054a576040805162461bcd60e51b81526020600482018190526024820152600080516020610d10833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61059c610cc5565b6001600160a01b03166105ad61061e565b6001600160a01b0316146105f6576040805162461bcd60e51b81526020600482018190526024820152600080516020610d10833981519152604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60025490565b6000546001600160a01b031690565b6004546001600160a01b0316610678576040805162461bcd60e51b815260206004820152601d6024820152600080516020610cf0833981519152604482015290519081900360640190fd5b600081116106bf576040805162461bcd60e51b815260206004820152600f60248201526e063616e206e6f74207374616b65203608c1b604482015290519081900360640190fd5b6004805460408051630e0dc3b960e11b81523393810193909352516001600160a01b0390911691631c1b877291602480830192600092919082900301818387803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b50506005546107329250905082610c07565b6005553360009081526006602052604090205461074f9082610c07565b3360008181526006602090815260408083209485554260019095019490945560035484516323b872dd60e01b815260048101949094523060248501526044840186905293516001600160a01b03909416936323b872dd93606480820194918390030190829087803b1580156107c357600080fd5b505af11580156107d7573d6000803e3d6000fd5b505050506040513d60208110156107ed57600080fd5b505060408051828152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a250565b610830610cc5565b6001600160a01b031661084161061e565b6001600160a01b03161461088a576040805162461bcd60e51b81526020600482018190526024820152600080516020610d10833981519152604482015290519081900360640190fd5b600460009054906101000a90046001600160a01b03166001600160a01b0316631beb2615826040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156108ee57600080fd5b505af1158015610902573d6000803e3d6000fd5b5050505050565b6004546001600160a01b0316610954576040805162461bcd60e51b815260206004820152601d6024820152600080516020610cf0833981519152604482015290519081900360640190fd5b60048054604080516351cff8d960e01b81523393810193909352516001600160a01b03909116916351cff8d991602480830192600092919082900301818387803b1580156109a157600080fd5b505af11580156109b5573d6000803e3d6000fd5b50505050565b60015490565b6004546001600160a01b0316610a0c576040805162461bcd60e51b815260206004820152601d6024820152600080516020610cf0833981519152604482015290519081900360640190fd5b610a1d610a18336104cd565b610272565b610a25610909565b565b610a2f610cc5565b6001600160a01b0316610a4061061e565b6001600160a01b031614610a89576040805162461bcd60e51b81526020600482018190526024820152600080516020610d10833981519152604482015290519081900360640190fd5b6001600160a01b038116610ace5760405162461bcd60e51b8152600401808060200182810382526026815260200180610cca6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b610b31610cc5565b6001600160a01b0316610b4261061e565b6001600160a01b031614610b8b576040805162461bcd60e51b81526020600482018190526024820152600080516020610d10833981519152604482015290519081900360640190fd5b60008111610bcc576040805162461bcd60e51b81526020600482015260096024820152686e6f7420612061707960b81b604482015290519081900360640190fd5b60018190556040805182815290517f3d56397c44d55d84b43b69e1ae583cde39bf83d169d08dbefbfcefba2e1a78369181900360200190a150565b600082820183811015610c61576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082821115610cbf576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737372657761726420706f6f6c206d757374206265207365742066697273740000004f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212202be918daaeb3b19c74bb60dc2b1b9f2d13156c9d6f6fa635d437214cb97dff4064736f6c63430007060033";

export class AresStake__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _lockDays: BigNumberish,
    _apy: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AresStake> {
    return super.deploy(
      _lockDays,
      _apy,
      _token,
      overrides || {}
    ) as Promise<AresStake>;
  }
  getDeployTransaction(
    _lockDays: BigNumberish,
    _apy: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_lockDays, _apy, _token, overrides || {});
  }
  attach(address: string): AresStake {
    return super.attach(address) as AresStake;
  }
  connect(signer: Signer): AresStake__factory {
    return super.connect(signer) as AresStake__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AresStakeInterface {
    return new utils.Interface(_abi) as AresStakeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AresStake {
    return new Contract(address, _abi, signerOrProvider) as AresStake;
  }
}
